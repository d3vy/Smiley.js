// Generated by CoffeeScript 1.12.2
(function() {
  var char, checkForSmiley, extras, fixSmiles, i, j, k, l, oppositeSmileParts, prepareSmiley, prepareSmileys, ref, ref1, replaceString, reverse, reverseSmileys, smileParts, smileys, toggleSmiley,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  smileys = [':(', ':)', ':O', ':D', ':p', ':*', ':-)', ':-(', ':-O', ':-D', ';)', ';-)', ':P', 'xD'];

  extras = {
    '<3': true,
    '&lt;3': true
  };

  smileParts = {
    'O': 'middle-mouth',
    'D': 'middle-mouth',
    'd': 'middle-mouth',
    'p': 'low-mouth',
    '*': 'high-mouth',
    '-': 'nose',
    'P': 'middle-mouth'
  };

  oppositeSmileParts = {
    'p': 'd',
    ')': '(',
    '(': ')',
    'P': 'd'
  };

  reverseSmileys = [];

  for (i = k = 0, ref = smileys.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {
    reverse = '';
    for (j = l = ref1 = smileys[i].length - 1; ref1 <= 0 ? l <= 0 : l >= 0; j = ref1 <= 0 ? ++l : --l) {
      char = smileys[i][j];
      if (indexOf.call(oppositeSmileParts, char) >= 0) {
        reverse += oppositeSmileParts[smileys[i][j]];
      } else {
        reverse += smileys[i][j];
      }
    }
    reverseSmileys.push(reverse);
  }

  toggleSmiley = function() {
    return $(this).toggleClass('active');
  };

  prepareSmileys = function(html) {
    var extra, len, m, n, o, ref2, ref3;
    for (m = 0, len = extras.length; m < len; m++) {
      extra = extras[m];
      html = checkForSmiley(html, extra, extras[extra]);
    }
    for (i = n = ref2 = smileys.length - 1; ref2 <= 0 ? n <= 0 : n >= 0; i = ref2 <= 0 ? ++n : --n) {
      html = checkForSmiley(html, smileys[i], false);
    }
    for (i = o = ref3 = reverseSmileys.length - 1; ref3 <= 0 ? o <= 0 : o >= 0; i = ref3 <= 0 ? ++o : --o) {
      html = checkForSmiley(html, reverseSmileys[i], true);
    }
    return html;
  };

  checkForSmiley = function(html, smiley, isReverse) {
    var index, replace;
    index = html.indexOf(smiley);
    replace = null;
    while (index >= 0) {
      if (replace === null) {
        replace = prepareSmiley(smiley, isReverse);
      }
      html = replaceString(html, replace, index, index + smiley.length);
      index = html.indexOf(smiley, index + replace.length);
    }
    return html;
  };

  prepareSmiley = function(smiley, isReverse) {
    var html, m, ref2, ref3;
    html = '<span class="smiley-wrapper">' + '<span class="smiley' + (isReverse ? ' smiley-reverse' : '') + '">';
    for (i = m = 0, ref2 = smiley.length; 0 <= ref2 ? m < ref2 : m > ref2; i = 0 <= ref2 ? ++m : --m) {
      if (ref3 = smiley[i], indexOf.call(smileParts, ref3) >= 0) {
        html += '<span class="' + smileParts[smiley[i]] + '">' + smiley[i] + '</span>';
      } else {
        html += smiley[i];
      }
    }
    html += '</span>' + '</span>';
    return html;
  };

  replaceString = function(string, replace, from, to) {
    return string.substring(0, from) + replace + string.substring(to);
  };

  fixSmiles = function($el) {
    var smiles;
    smiles = prepareSmileys($el.html());
    return $el.html(smiles);
  };

  $(document).on('click', '.smiley', toggleSmiley);

  $.fn.smilify = function() {
    var $els;
    $els = $(this).each(function() {
      return fixSmiles($(this));
    });
    setTimeout(function() {
      return $els.find('.smiley').each(toggleSmiley);
    }, 20);
    return this;
  };

}).call(this);

//# sourceMappingURL=smiley.js.map
